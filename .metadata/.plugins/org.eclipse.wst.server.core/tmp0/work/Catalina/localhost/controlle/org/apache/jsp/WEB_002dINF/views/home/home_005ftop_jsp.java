/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-28 08:08:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_005ftop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(":root {\r\n");
      out.write("  --text-color: #f8f8ff;\r\n");
      out.write("  --background-color: #FFA629;\r\n");
      out.write("  --accent-color: #fff0f5;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header a {\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  color: var(--text-color);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav {\r\n");
      out.write("  background-color: var(--background-color);\r\n");
      out.write("  display: flex;\r\n");
      out.write("  align-items: center;\r\n");
      out.write("  padding: 20px 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menuimg {\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write(".midmenu {\r\n");
      out.write("  list-style: none;\r\n");
      out.write("  display: flex;\r\n");
      out.write("  font-family: 'Bagel Fat One', cursive;\r\n");
      out.write("  margin-right: 20px;\r\n");
      out.write("}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("ul.midmenu > li{\r\n");
      out.write("	font-size: 30px;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	width:200px;\r\n");
      out.write("	padding: 10px 5px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.midmenu > li:hover ul.sub{\r\n");
      out.write("	display:block;	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.midmenu > li ul.sub li:hover{\r\n");
      out.write("	background-color: tomato;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.midmenu > li ul.sub{\r\n");
      out.write("	display: none;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	width:200px;\r\n");
      out.write("/* 	padding: 5px 10px; */\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	background-color: var(--background-color);\r\n");
      out.write("	color: var(--text-color);\r\n");
      out.write("	list-style:none;\r\n");
      out.write("	margin : 10px 0 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".topmenu {\r\n");
      out.write("  text-align: left;\r\n");
      out.write("  display: flex;\r\n");
      out.write("  justify-content: flex-end; /* 오른쪽 정렬을 추가 */\r\n");
      out.write("  height: 50px;\r\n");
      out.write("  align-items: center; /* 수직 가운데 정렬 추가 */\r\n");
      out.write("  list-style: none;\r\n");
      out.write("  color: #FFA629;\r\n");
      out.write("  font-family: 'Bagel Fat One', cursive;\r\n");
      out.write("  margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".topmenu li {\r\n");
      out.write("  font-size: 25px;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  padding: 0 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* 메인로고 꾸밈 */\r\n");
      out.write(".mainlogo {\r\n");
      out.write("  display: flex;\r\n");
      out.write("  justify-content: center;\r\n");
      out.write("  align-items: center;\r\n");
      out.write("  height: 100px;\r\n");
      out.write("  margin-bottom: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav > div{\r\n");
      out.write("	margin-left:100px;\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Bagel+Fat+One&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<header style=\"width:1920px; position: relative; left: 50%; transform: translate(-50%);\">\r\n");
      out.write("	\r\n");
      out.write("	<!-- 최상단 NOTICE,LOGIN,JOIN US -->\r\n");
      out.write("	<div>\r\n");
      out.write("	  <ul class=\"topmenu\">\r\n");
      out.write("	    <li><a href=\"\" style=\"color:tomato; display:none;\">관리자 페이지</a></li><!-- id가 admin일 때 display:\"\" JS 처리  -->\r\n");
      out.write("	    <li><a href=\"\" style=\"color:#FFA629;\">NOTICE </a></li>\r\n");
      out.write("	    <li><a href=\"\" style=\"color:#FFA629;\">JOIN US</a></li>\r\n");
      out.write("	    <li><a href=\"\" style=\"color:#FFA629;\">LOGIN</a></li><!-- 로그인 했을 때 LOGIN => LOGOUT 변경 -->\r\n");
      out.write("	  </ul>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 5959 메인 로고 -->\r\n");
      out.write("	<div class=\"mainlogo\">\r\n");
      out.write("	  <a href=\"\"><img src=\"resources/images/home/mainlogo.png\" width=\"200px\"></a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<section class=\"nav\">\r\n");
      out.write("		<!-- 공백 div -->\r\n");
      out.write("		<div></div>\r\n");
      out.write("		   \r\n");
      out.write("		  <!-- 메뉴 -->\r\n");
      out.write("		  <ul class=\"midmenu\">\r\n");
      out.write("			    <li><a href=\"\">HOME</a></li>\r\n");
      out.write("			    <li class=\"edu_main\"><a href=\"\">교육정보</a>\r\n");
      out.write("			    	<ul class=\"edu sub\">\r\n");
      out.write("			    		<li><a href=\"\">필수 정보</a></li>\r\n");
      out.write("			    		<li><a href=\"\">양육 정보</a></li>\r\n");
      out.write("			    		<li><a href=\"\">훈련 정보</a></li>\r\n");
      out.write("			    	</ul>\r\n");
      out.write("			    </li>\r\n");
      out.write("			    <li class=\"ogu_main\"><a href=\"\">오구닥터</a>\r\n");
      out.write("			        <ul class=\"ogu sub\">\r\n");
      out.write("			    		<li><a href=\"\">건강 자가진단</a></li>\r\n");
      out.write("			    		<li><a href=\"\">건강 계산기</a></li>\r\n");
      out.write("			    	</ul>\r\n");
      out.write("			    </li>\r\n");
      out.write("			    <li><a href=\"\">플레이스</a></li>\r\n");
      out.write("			    <li><a href=\"\">모두의 포켓</a></li>\r\n");
      out.write("			    <li class=\"lounge_main\"><a href=\"\">라운지</a>\r\n");
      out.write("			   		<ul class=\"lounge sub\">\r\n");
      out.write("			    		<li><a href=\"\">일상 공유</a></li>\r\n");
      out.write("			    		<li><a href=\"\">추천 탭</a></li>\r\n");
      out.write("			    		<li><a href=\"\">유저간 질문</a></li>\r\n");
      out.write("			    	</ul>\r\n");
      out.write("			    </li>\r\n");
      out.write("			    <li class=\"food_main\"><a href=\"\">먹거리</a>\r\n");
      out.write("			    	<ul class=\"food sub\">\r\n");
      out.write("			    		<li><a href=\"\">#강아지</a></li>\r\n");
      out.write("			    		<li><a href=\"\">#고양이</a></li>\r\n");
      out.write("			    	</ul>\r\n");
      out.write("			    </li>\r\n");
      out.write("			    <li class=\"support_main\"><a href=\"\">고객지원</a>\r\n");
      out.write("			   		 <ul class=\"support sub\">\r\n");
      out.write("			    		<li><a href=\"\">공지사항</a></li>\r\n");
      out.write("			    		<li><a href=\"\">문의사항</a></li>\r\n");
      out.write("			    		<li><a href=\"\">신고</a></li>\r\n");
      out.write("			    	</ul>\r\n");
      out.write("			    </li>\r\n");
      out.write("		  </ul>\r\n");
      out.write("		  \r\n");
      out.write("		  <div></div>\r\n");
      out.write("		  \r\n");
      out.write("	</section>\r\n");
      out.write("</header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
